[{"/Users/abdu/Desktop/ReactProjects + daata/eat-and-split/src/index.js":"1","/Users/abdu/Desktop/ReactProjects + daata/eat-and-split/src/App.js":"2","/Users/abdu/Desktop/ReactProjects + daata/eat-and-split/src/reportWebVitals.js":"3"},{"size":535,"mtime":1694364917866,"results":"4","hashOfConfig":"5"},{"size":4425,"mtime":1697215148428,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1694364917866,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w40hqk",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abdu/Desktop/ReactProjects + daata/eat-and-split/src/index.js",[],[],"/Users/abdu/Desktop/ReactProjects + daata/eat-and-split/src/App.js",["18"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nconst initialFriends = [\n  {\n    id: 118836,\n    name: \"Clark\",\n    image: \"https://i.pravatar.cc/48?u=118836\",\n    balance: -7,\n  },\n  {\n    id: 933372,\n    name: \"Sarah\",\n    image: \"https://i.pravatar.cc/48?u=933372\",\n    balance: 20,\n  },\n  {\n    id: 499476,\n    name: \"Anthony\",\n    image: \"https://i.pravatar.cc/48?u=499476\",\n    balance: 0,\n  },\n];\n\nlet Button  = ({children, onClick}) => {\n  return <button className='button' onClick={onClick}>{children}</button>\n}\n\n\nfunction App() {\n  let [friends, setFriends] = useState(initialFriends)\n  let [showAddForm, setAddFrorm] = useState(false)\n  let [selectedFriend, setSelectedFriend] = useState(null)\n\n  let handleSelectedFriend = (currentSelected) =>{\n    setSelectedFriend(currentSelected)\n  }\n\n  let AddNewFriend = (newFriend) =>{\n    setFriends([...friends, newFriend])\n  }\n\n  let changeBalance = (value) =>{\n    setFriends(friends=>    friends.map((f)=> (f.id === selectedFriend.id)?{...f, balance:f.balance + value}:f\n ))\n setSelectedFriend(null)\n  }\n \n  return <div className='app'>\n    <div className='sidebar'>\n      <FriendsList friends={friends} onSelect={handleSelectedFriend} selectedFriend={selectedFriend}/>\n      {\n        showAddForm && <AddFriendForm AddNewFriend={AddNewFriend}/>\n      }\n      <Button onClick={()=> setAddFrorm((show) => !show)}>{(showAddForm?'Close':'Add Friend')}</Button>\n    </div>\n    {\n      selectedFriend && <FormSplitAndBill selectedFriend={selectedFriend} changeBalance={changeBalance} key={selectedFriend.id}/>\n    }\n  </div>\n}\n\n\nlet FriendsList = ({friends,onSelect,selectedFriend}) =>{\n  return <ul>\n    {\n    friends.map((friend)=> <Friend friend={friend} key={friend.id} onSelect={onSelect} selectedFriend={selectedFriend}/>)\n    }\n  </ul>\n}\n\nlet Friend = ({friend,onSelect, selectedFriend}) => {\n  return <li className={friend.id === selectedFriend?.id ? 'selected':''}>\n    <img src={friend.image} alt={friend.name}  />\n    <h3>{friend.name}</h3>\n    {\n      friend.balance < 0 && <p className='red'>You owe {friend.name} {Math.abs(friend.balance)}€</p>\n    }\n    {\n      friend.balance > 0 && <p className='green'>{friend.name} owes you {friend.balance}€</p>\n    }\n    {\n      friend.balance === 0 && <p>You and {friend.balance} are even</p>\n    }\n    <Button onClick={()=>{\n      onSelect(friend)\n    }}>Select</Button>\n  </li>\n}\n\nlet AddFriendForm = ({AddNewFriend}) => {\n\n  let handSubmit = (e) =>{\n    e.preventDefault()\n    let id = crypto.randomUUID()\n    const newFriend = {\n      id,\n      name,\n      image : `${imageUrl}?u=${id}`,\n      balance:0\n    }\n    AddNewFriend(newFriend)\n    setName(\"\")\n    setImageUrl(\"https://i.pravatar.cc/48\")\n  }\n\n  let [name,setName] = useState(\"\")\n  let [imageUrl, setImageUrl] = useState(\"https://i.pravatar.cc/48\")\n  return <form className='form-add-friend' onSubmit={(e) => handSubmit(e)}>\n    <label >💁‍♂️ Friend Name</label>\n    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name}/>\n     <label >🎆 Image Url</label>\n    <input type=\"text\" onChange={(e) => setImageUrl(e.target.value) } value={imageUrl}/>\n    <Button>Add</Button>\n  </form>\n}\n\nlet FormSplitAndBill = ({selectedFriend, changeBalance}) => {\n  let [bill, setBill] = useState(0)\n  let [expense, setExpense] = useState(0)\n  let [whosPaying, setWhosPaying] = useState(\"you\")\n  let friendsExpense = (bill>0 && bill>expense) ? bill - expense : ''\n\n  let handleSplitForm = (e) => {\n    e.preventDefault()\n    changeBalance((whosPaying === 'you') ? friendsExpense : -expense)\n  }\n  \n  \n  return <form className='form-split-bill' onSubmit={(e) => handleSplitForm(e)}>\n    <h2>Split the bill with {selectedFriend.name}</h2>\n    <label >💰 Bill value</label>\n    <input type=\"text\" onChange={(e)=> {\n      setBill(Number(e.target.value))\n    }}/>\n    <label >💁‍♂️ Your expense</label>\n    <input type=\"text\" onChange={(e)=> {\n      setExpense(Number(e.target.value))\n    }}/>\n    <label >👧 {selectedFriend.name}'s expense</label>\n    <input type=\"text\" disabled value={friendsExpense}/>\n    <label >🤑 Who's paying the bill?</label>\n    <select onChange={(e)=> setWhosPaying(e.target.value)}>\n      <option value=\"you\">you</option>\n      <option value=\"friend\">{selectedFriend.name}</option>\n    </select>\n    <Button>Split Bill</Button>\n  </form>\n}\n\n\nexport default App;\n","/Users/abdu/Desktop/ReactProjects + daata/eat-and-split/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]